def aminoMassTable():
    aminoMass = {
        'G': 57,
        'A': 71,
        'S': 87,
        'P': 97,
        'V': 99,
        'T': 101,
        'C': 103,
        'I': 113,
        'L': 113,
        'N': 114,
        'D': 115,
        'K': 128,
        'Q': 128,
        'E': 129,
        'M': 131,
        'H': 137,
        'F': 147,
        'R': 156,
        'Y': 163,
        'W': 186
    }
    return aminoMass

def cyclicSpectrum(peptide):
    aminoMassT = aminoMassTable()
    prefixMass = {
        0: 0
    }
    for i in range(len(peptide)):
        for j in range(20):
            if(list(aminoMassT.keys())[j] == peptide[i]):
                prefixMass[i + 1] = prefixMass[i] + aminoMassT[peptide[i]]
    
    peptideMass = prefixMass[len(peptide)]
    cyclicSpc = [0]
    for i in range(len(peptide)):
        for j in range(i + 1, len(peptide) + 1):
            cyclicSpc.append(prefixMass[j] - prefixMass[i])
            if(i > 0 and j < len(peptide)):
                cyclicSpc.append(peptideMass - (prefixMass[j] - prefixMass[i]))
    return sorted(cyclicSpc)

peptide = "NPNKRSCWLMRIHFFKIKITHDYCDSVWKAFMQCGVVEHSGMEM"
expMass = "0 57 57 57 71 71 87 87 87 99 99 99 103 103 103 103 113 113 113 113 115 115 115 128 128 128 128 128 129 129 129 131 131 131 131 137 137 137 137 144 147 147 147 156 156 156 160 163 184 185 186 186 188 190 198 199 202 208 218 218 218 218 218 224 228 231 234 241 241 241 243 243 244 250 250 255 256 259 259 260 260 265 266 266 275 275 276 278 281 284 284 284 288 294 294 299 301 305 305 312 317 317 321 321 327 333 337 346 346 347 349 349 353 354 355 358 358 362 365 369 371 371 378 381 384 387 388 391 397 403 404 404 406 407 408 410 412 413 419 420 420 421 422 423 425 430 431 436 442 448 449 450 452 452 452 461 461 462 464 474 477 477 482 484 486 486 487 502 508 509 509 516 518 519 521 533 534 534 535 535 535 536 539 541 541 541 544 544 549 551 553 554 555 557 559 562 564 565 566 567 576 578 580 583 589 589 589 599 605 608 608 611 611 615 617 621 624 629 633 637 638 640 648 648 660 662 663 665 665 667 668 670 670 670 672 672 672 672 673 686 690 691 692 693 695 697 698 700 704 704 705 708 711 714 720 724 724 725 726 730 736 739 746 751 752 757 761 764 765 765 768 769 775 776 783 784 785 785 785 796 796 800 801 801 804 806 807 811 817 819 822 823 828 829 833 835 835 835 837 838 839 839 842 847 848 856 858 861 861 864 864 868 870 881 883 887 888 893 896 899 900 904 909 911 913 913 913 915 921 921 922 925 932 932 934 938 942 948 948 951 957 960 963 963 964 964 964 966 969 970 970 971 975 984 984 989 989 994 998 999 1002 1008 1009 1018 1020 1020 1024 1026 1026 1027 1027 1028 1030 1035 1037 1041 1041 1044 1051 1053 1056 1063 1066 1066 1073 1076 1077 1079 1081 1085 1088 1092 1092 1097 1097 1099 1101 1102 1105 1107 1111 1112 1113 1117 1119 1121 1122 1122 1123 1131 1133 1145 1146 1147 1149 1152 1154 1154 1156 1158 1159 1162 1169 1174 1175 1176 1181 1182 1182 1184 1188 1188 1205 1206 1207 1210 1212 1213 1214 1219 1222 1225 1226 1228 1229 1230 1232 1232 1234 1236 1236 1239 1245 1248 1250 1259 1259 1259 1259 1262 1267 1269 1275 1278 1278 1282 1283 1284 1286 1287 1287 1299 1305 1310 1310 1313 1316 1319 1319 1320 1321 1322 1325 1331 1332 1333 1335 1335 1338 1341 1342 1343 1353 1363 1365 1365 1367 1369 1372 1372 1373 1373 1376 1385 1386 1390 1393 1395 1395 1396 1397 1406 1412 1413 1414 1418 1420 1422 1422 1423 1424 1425 1430 1434 1435 1440 1441 1446 1446 1447 1448 1450 1450 1450 1456 1466 1468 1469 1470 1472 1472 1478 1485 1496 1496 1498 1500 1503 1504 1505 1509 1510 1517 1518 1523 1529 1533 1535 1537 1539 1540 1542 1543 1549 1550 1551 1551 1553 1553 1553 1553 1553 1559 1559 1561 1561 1563 1565 1569 1572 1581 1581 1583 1585 1587 1594 1597 1597 1607 1613 1616 1621 1627 1631 1631 1632 1632 1633 1636 1638 1640 1654 1656 1660 1664 1664 1666 1666 1668 1668 1670 1670 1672 1674 1674 1678 1680 1681 1682 1684 1684 1688 1689 1690 1690 1690 1694 1696 1696 1700 1700 1706 1728 1731 1734 1735 1741 1741 1744 1747 1751 1753 1759 1764 1767 1769 1769 1771 1777 1777 1777 1783 1783 1783 1787 1789 1791 1794 1794 1795 1795 1797 1799 1803 1803 1803 1805 1805 1813 1817 1818 1819 1821 1822 1826 1828 1831 1834 1840 1841 1856 1862 1862 1870 1872 1872 1872 1876 1876 1882 1882 1886 1888 1888 1890 1892 1898 1898 1898 1902 1906 1907 1908 1912 1919 1920 1922 1926 1927 1931 1931 1932 1934 1934 1939 1943 1943 1949 1950 1954 1957 1959 1959 1965 1966 1969 1975 1978 1978 1983 1984 1984 1989 1991 2000 2001 2001 2001 2005 2005 2007 2013 2013 2018 2019 2021 2025 2032 2035 2035 2037 2040 2044 2046 2049 2058 2059 2063 2067 2068 2070 2071 2071 2078 2079 2080 2083 2088 2094 2094 2094 2097 2097 2100 2103 2104 2106 2106 2115 2115 2116 2116 2116 2117 2118 2120 2122 2125 2131 2136 2138 2142 2147 2158 2160 2161 2161 2166 2170 2172 2172 2172 2174 2177 2177 2196 2199 2202 2203 2203 2207 2207 2207 2209 2209 2210 2215 2219 2223 2225 2225 2226 2229 2230 2231 2234 2235 2243 2243 2244 2246 2250 2253 2255 2256 2259 2262 2264 2267 2283 2285 2285 2285 2286 2289 2292 2294 2302 2303 2305 2305 2306 2307 2318 2322 2324 2333 2333 2334 2335 2336 2338 2338 2340 2342 2344 2346 2349 2354 2354 2356 2357 2358 2359 2359 2359 2362 2372 2380 2383 2384 2388 2392 2395 2397 2398 2399 2406 2414 2416 2417 2417 2420 2420 2420 2421 2421 2421 2431 2435 2448 2452 2454 2455 2461 2461 2462 2466 2467 2469 2470 2471 2473 2474 2475 2478 2485 2487 2487 2487 2491 2493 2496 2501 2501 2503 2505 2508 2509 2518 2519 2520 2523 2523 2523 2527 2530 2534 2534 2535 2542 2544 2546 2548 2548 2553 2558 2567 2572 2577 2577 2579 2581 2583 2590 2591 2591 2595 2598 2602 2602 2602 2605 2606 2607 2616 2617 2620 2622 2624 2624 2629 2632 2634 2638 2638 2638 2640 2647 2650 2651 2652 2654 2655 2656 2658 2659 2663 2664 2664 2670 2671 2673 2677 2690 2694 2704 2704 2704 2705 2705 2705 2708 2708 2709 2711 2719 2726 2727 2728 2730 2733 2737 2741 2742 2745 2753 2763 2766 2766 2766 2767 2768 2769 2771 2771 2776 2779 2781 2783 2785 2787 2787 2789 2790 2791 2792 2792 2801 2803 2807 2818 2819 2820 2820 2822 2823 2831 2833 2836 2839 2840 2840 2840 2842 2858 2861 2863 2866 2869 2870 2872 2875 2879 2881 2882 2882 2890 2891 2894 2895 2896 2899 2900 2900 2902 2906 2910 2915 2916 2916 2918 2918 2918 2922 2922 2923 2926 2929 2948 2948 2951 2953 2953 2953 2955 2959 2964 2964 2965 2967 2978 2983 2987 2989 2994 3000 3003 3005 3007 3008 3009 3009 3009 3010 3010 3019 3019 3021 3022 3025 3028 3028 3031 3031 3031 3037 3042 3045 3046 3047 3054 3054 3055 3057 3058 3062 3066 3067 3076 3079 3081 3085 3088 3090 3090 3093 3100 3104 3106 3107 3112 3112 3118 3120 3120 3124 3124 3124 3125 3134 3136 3141 3141 3142 3147 3147 3150 3156 3159 3160 3166 3166 3168 3171 3175 3176 3182 3182 3186 3191 3191 3193 3194 3194 3198 3199 3203 3205 3206 3213 3217 3218 3219 3223 3227 3227 3227 3233 3235 3237 3237 3239 3243 3243 3249 3249 3253 3253 3253 3255 3263 3263 3269 3284 3285 3291 3294 3297 3299 3303 3304 3306 3307 3308 3312 3320 3320 3322 3322 3322 3326 3328 3330 3330 3331 3331 3334 3336 3338 3342 3342 3342 3348 3348 3348 3354 3356 3356 3358 3361 3366 3372 3374 3378 3381 3384 3384 3390 3391 3394 3397 3419 3425 3425 3429 3429 3431 3435 3435 3435 3436 3437 3441 3441 3443 3444 3445 3447 3451 3451 3453 3455 3455 3457 3457 3459 3459 3461 3461 3465 3469 3471 3485 3487 3489 3492 3493 3493 3494 3494 3498 3504 3509 3512 3518 3528 3528 3531 3538 3540 3542 3544 3544 3553 3556 3560 3562 3564 3564 3566 3566 3572 3572 3572 3572 3572 3574 3574 3575 3576 3582 3583 3585 3586 3588 3590 3592 3596 3602 3607 3608 3615 3616 3620 3621 3622 3625 3627 3629 3629 3640 3647 3653 3653 3655 3656 3657 3659 3669 3675 3675 3675 3677 3678 3679 3679 3684 3685 3690 3691 3695 3700 3701 3702 3703 3703 3705 3707 3711 3712 3713 3719 3728 3729 3730 3730 3732 3735 3739 3740 3749 3752 3752 3753 3753 3756 3758 3760 3760 3762 3772 3782 3783 3784 3787 3790 3790 3792 3793 3794 3800 3803 3804 3805 3806 3806 3809 3812 3815 3815 3820 3826 3838 3838 3839 3841 3842 3843 3847 3847 3850 3856 3858 3863 3866 3866 3866 3866 3875 3877 3880 3886 3889 3889 3891 3893 3893 3895 3896 3897 3899 3900 3903 3906 3911 3912 3913 3915 3918 3919 3920 3937 3937 3941 3943 3943 3944 3949 3950 3951 3956 3963 3966 3967 3969 3971 3971 3973 3976 3978 3979 3980 3992 3994 4002 4003 4003 4004 4006 4008 4012 4013 4014 4018 4020 4023 4024 4026 4028 4028 4033 4033 4037 4040 4044 4046 4048 4049 4052 4059 4059 4062 4069 4072 4074 4081 4084 4084 4088 4090 4095 4097 4098 4098 4099 4099 4101 4105 4105 4107 4116 4117 4123 4126 4127 4131 4136 4136 4141 4141 4150 4154 4155 4155 4156 4159 4161 4161 4161 4162 4162 4165 4168 4174 4177 4177 4183 4187 4191 4193 4193 4200 4203 4204 4204 4210 4212 4212 4212 4214 4216 4221 4225 4226 4229 4232 4237 4238 4242 4244 4255 4257 4261 4261 4264 4264 4267 4269 4277 4278 4283 4286 4286 4287 4288 4290 4290 4290 4292 4296 4297 4302 4303 4306 4308 4314 4318 4319 4321 4324 4324 4325 4329 4329 4340 4340 4340 4341 4342 4349 4350 4356 4357 4360 4360 4361 4364 4368 4373 4374 4379 4386 4389 4395 4399 4400 4401 4401 4405 4411 4414 4417 4420 4421 4421 4425 4427 4428 4430 4432 4433 4434 4435 4439 4452 4453 4453 4453 4453 4455 4455 4455 4457 4458 4460 4460 4462 4463 4465 4477 4477 4485 4487 4488 4492 4496 4501 4504 4508 4510 4514 4514 4517 4517 4520 4526 4536 4536 4536 4542 4545 4547 4549 4558 4559 4560 4561 4563 4566 4568 4570 4571 4572 4574 4576 4581 4581 4584 4584 4584 4586 4589 4590 4590 4590 4591 4591 4592 4604 4606 4607 4609 4616 4616 4617 4623 4638 4639 4639 4641 4643 4648 4648 4651 4661 4663 4664 4664 4673 4673 4673 4675 4676 4677 4683 4689 4694 4695 4700 4702 4703 4704 4705 4705 4706 4712 4713 4715 4717 4718 4719 4721 4721 4722 4728 4734 4737 4738 4741 4744 4747 4754 4754 4756 4760 4763 4767 4767 4770 4771 4772 4776 4776 4778 4779 4779 4788 4792 4798 4804 4804 4808 4808 4813 4820 4820 4824 4826 4831 4831 4837 4841 4841 4841 4844 4847 4849 4850 4850 4859 4859 4860 4865 4865 4866 4866 4869 4870 4875 4875 4881 4882 4882 4884 4884 4884 4891 4894 4897 4901 4907 4907 4907 4907 4907 4917 4923 4926 4927 4935 4937 4939 4939 4940 4941 4962 4965 4969 4969 4969 4978 4978 4978 4981 4988 4988 4988 4988 4994 4994 4994 4994 4996 4996 4996 4997 4997 4997 4997 4997 5010 5010 5010 5012 5012 5012 5012 5022 5022 5022 5022 5026 5026 5026 5038 5038 5038 5054 5054 5068 5068 5068 5125"
expMass = expMass.split(" ")
ls = cyclicSpectrum(peptide)
ls = list(map(str, ls))

from collections import Counter

counter1 = Counter(expMass)
counter2 = Counter(ls)

common_elements = counter1 & counter2
count = sum(common_elements.values())

print(count)